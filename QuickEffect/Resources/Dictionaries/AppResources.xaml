<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:vc="clr-namespace:QuickEffect.ValueConverters">

    <!-- Global TextBlock Style -->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Lato"/>
    </Style>
    
    <!-- Global Button Style -->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource SquareButtonStyle}">        
        <Setter Property="FontFamily" Value="Lato"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Controls:ButtonHelper.PreserveTextCase" Value="True"/>
    </Style> 
    
    <!-- Global Label Style -->
    <Style TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Lato"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0 5"/>        
    </Style>

    <!-- Global Icon Style -->
    <Style TargetType="{x:Type iconPacks:PackIconMaterial}">
        <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
    </Style>

    <!-- Icon Template -->
    <DataTemplate x:Key="LightningBoldIcon">
        <Grid Width="15"
              Height="15"
              Margin="4"
              Background="Transparent"
              RenderOptions.EdgeMode="Aliased"
              RenderOptions.BitmapScalingMode="HighQuality">
            <Image Source="/Resources/QuickEffects.ico"/>
        </Grid>
    </DataTemplate>

    <!-- Bottom StackPanel with shadow effect -->
    <Style TargetType="StackPanel" x:Key="BottomStackPanel">
        <Setter Property="DockPanel.Dock" Value="Bottom"/>
        <Setter Property="Panel.ZIndex" Value="1"/>
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="-255" 
                                  BlurRadius="10"
                                  ShadowDepth="7"
                                  Opacity=".4"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Circle Button Style -->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroCircleButtonStyle}" x:Key="AccentedMetroCircleButtonStyle">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Square Toggle Button Style -->
    <Style TargetType="{x:Type ToggleButton}" x:Key="SquareToggleButtonStyle">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource AccentColorBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource AccentColorBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Image Radiobutton Style -->
    <Style x:Key="ImageRadioButton" TargetType="RadioButton">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Opacity" Value="0.7"/>
            </Trigger>
        </Style.Triggers>

        <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="Transparent">                                    
                            <Image Source="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    <!--- ListBoxItem Style -->
    <Style x:Key="CustomListBoxItemStyle"
           BasedOn="{StaticResource MetroListBoxItem}"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="Padding" Value="10"/>
    </Style>

    <!-- Horizontal ListBoxItem Style-->
    <Style TargetType="ListBoxItem" x:Key="HorizontalListBoxItemStyle">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>

    <!--- Settings ListBoxItem Template -->
    <ItemContainerTemplate x:Key="SettingsListBoxItemTemplate">
        <StackPanel Orientation="Horizontal">
            <iconPacks:PackIconMaterial Kind="{Binding Icon}"
                                        VerticalAlignment="Center"
                                        Margin="0 0 10 0"/>
            <TextBlock Text="{Binding Name}" 
                       FontSize="14"/>
        </StackPanel>
    </ItemContainerTemplate>

    <!-- Value Converters -->
    <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter"/>
    <vc:NullToVisibilityConverter x:Key="nullToVisibilityConverter"/>
    <vc:ObjectTypeToVisibilityConverter x:Key="objectTypeToVisibilityConverter"/>
    <vc:NullToImageConverter x:Key="nullToImageConverter"/>
    <vc:OrientationToDockConverter x:Key="orientationToDockConverter"/>
    <vc:UriToImageConverter x:Key="uriToImageConverter"/>

</ResourceDictionary>