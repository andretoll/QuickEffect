<UserControl x:Class="QuickEffect.Views.UserControls.ImageEditorUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prop="clr-namespace:QuickEffect.Properties"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:uc="clr-namespace:QuickEffect.Views.UserControls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1280">

    <!-- Container -->
    <DockPanel LastChildFill="True">

        <!-- Toolbar Component -->
        <uc:ImageToolbarUserControl Panel.ZIndex="1000"
                                    DataContext="{Binding}"/>

        <!-- Message Component -->
        <uc:MessageUserControl Panel.ZIndex="1000"
                               DataContext="{Binding}"/>

        <!-- Navigation -->
        <StackPanel Style="{DynamicResource BottomStackPanel}">

            <DockPanel>
                
                <!-- Left group-->
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="15">
                    <!-- Check all -->
                    <CheckBox HorizontalAlignment="Left"
                              IsChecked="{Binding AllSelected}"
                              ToolTip="Select all images.">
                        <TextBlock Text="Select all"
                                   FontSize="16"/>
                    </CheckBox>
                </StackPanel>

                <!-- Right group -->
                <StackPanel Orientation="Horizontal"                            
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Margin="15">



                    <!-- Save all selected images -->
                    <Button Visibility="{Binding MultiSelect, Converter={StaticResource boolToVisibilityConverter}}"
                            ToolTip="Apply effect to all selected images.">
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconMaterial Kind="ContentSaveAll"
                                                        Width="15"
                                                        Height="15"
                                                        Margin="0 0 5 0"/>
                            <TextBlock Text="{Binding MultiSelectCount, StringFormat={}Apply effect to {0} item(s)}"/>
                        </StackPanel>
                    </Button>

                    <!-- Save current image -->
                    <Button ToolTip="Save image."
                            Margin="10 0 0 0"
                            Command="{Binding SaveImageCommand}">
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconMaterial Kind="ContentSaveOutline"
                                                        Width="15"
                                                        Height="15"
                                                        Margin="0 0 5 0"/>
                            <TextBlock Text="Save image"/>
                        </StackPanel>
                    </Button>

                </StackPanel>
            </DockPanel>            

        </StackPanel>

        <!-- Image list -->
        <!-- Get settings directly -->
        <Grid DockPanel.Dock="{Binding Source={x:Static prop:Settings.Default}, Path=ImageListOrientation, Converter={StaticResource orientationToDockConverter}}">

            <ListBox ItemsSource="{Binding ImageItems}"
                     SelectedItem="{Binding SelectedImage, Converter={StaticResource nullToImageConverter}}"
                     SelectedIndex="0"
                     ItemContainerStyle="{StaticResource HorizontalListBoxItemStyle}"
                     Background="Black"
                     ScrollViewer.CanContentScroll="False">

                <!-- Container for all items -->
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <!-- Get settings -->
                        <VirtualizingStackPanel Orientation="{Binding Source={x:Static prop:Settings.Default}, Path=ImageListOrientation}"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>

                <!-- A ListBox item -->
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Margin="5"
                                    Background="Transparent"
                                    Height="90"
                                    Width="90">

                            <!-- IsSelected-->
                            <CheckBox IsChecked="{Binding IsSelected}"
                                      Margin="0 0 0 10">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                                        <Style.Triggers>
                                            <!-- Always show checkbox if checked -->
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource 
                                                                                    AncestorType={x:Type ListBoxItem}}, 
                                                                                    Path=IsMouseOver}"
                                                               Value="False"/>
                                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=Self}}"
                                                               Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </MultiDataTrigger>
                                            <!-- Always show checkbox if hover-->
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource 
                                                                            AncestorType={x:Type ListBoxItem}}, 
                                                                            Path=IsMouseOver}" 
                                                         Value="True">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <!-- Hide checkbox if not hover and not checked -->
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource 
                                                                                    AncestorType={x:Type ListBoxItem}}, 
                                                                                    Path=IsMouseOver}"
                                                               Value="False"/>
                                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=Self}}"
                                                               Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>

                            <!-- Image -->
                            <Image Source="{Binding Path=FileName, Converter={StaticResource uriToImageConverter}}" 
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   ToolTip="{Binding}">

                            </Image>

                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

        </Grid>        

        <!-- Selected image -->
        <DockPanel Background="{DynamicResource WindowBackgroundBrush}"
                   Margin="20">
            <Image Source="{Binding SelectedImage, Converter={StaticResource nullToImageConverter}}">
                <Image.Effect>
                    <DropShadowEffect ShadowDepth="8"
                                      Opacity=".7"/>
                </Image.Effect>
            </Image>
        </DockPanel>

    </DockPanel>
    
</UserControl>
